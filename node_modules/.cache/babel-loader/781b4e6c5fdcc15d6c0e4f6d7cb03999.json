{"ast":null,"code":"var _jsxFileName = \"F:\\\\react2021\\\\todologinapp\\\\src\\\\modals\\\\CreateTask.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\nimport { addTodo } from '../redux/actions/TodoActions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CreateTask = ({\n  modal,\n  toggle,\n  modalState\n}) => {\n  _s();\n\n  const dispatch = useDispatch();\n  const [task, setTask] = useState(\"\");\n\n  const handleChange = e => {\n    setTask(e.target.value);\n  };\n\n  const createTodo = e => {\n    e.preventDefault();\n    const new_todo = {\n      id: Date.now(),\n      task: task\n    };\n    dispatch(addTodo(new_todo));\n    modalState();\n    setTask(\"\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: modal,\n      toggle: toggle,\n      children: [/*#__PURE__*/_jsxDEV(ModalHeader, {\n        toggle: toggle,\n        children: \"Create Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(ModalBody, {\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Task\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 30,\n              columnNumber: 27\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"form-control\",\n              name: \"task\",\n              value: task,\n              onChange: handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 23\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 19\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 14\n      }, this), /*#__PURE__*/_jsxDEV(ModalFooter, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          color: \"primary\",\n          onClick: createTodo,\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 18\n        }, this), ' ', /*#__PURE__*/_jsxDEV(Button, {\n          color: \"secondary\",\n          onClick: toggle,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 18\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 14\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CreateTask, \"LptOF61s45n8f+XuJBpwP5pv80U=\", false, function () {\n  return [useDispatch];\n});\n\n_c = CreateTask;\nexport default CreateTask;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateTask\");","map":{"version":3,"sources":["F:/react2021/todologinapp/src/modals/CreateTask.js"],"names":["React","useState","useDispatch","useSelector","Button","Modal","ModalHeader","ModalBody","ModalFooter","addTodo","CreateTask","modal","toggle","modalState","dispatch","task","setTask","handleChange","e","target","value","createTodo","preventDefault","new_todo","id","Date","now"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,WAAT,EAAqBC,WAArB,QAAwC,aAAxC;AACA,SAASC,MAAT,EAAiBC,KAAjB,EAAwBC,WAAxB,EAAqCC,SAArC,EAAgDC,WAAhD,QAAmE,YAAnE;AACA,SAAQC,OAAR,QAAsB,8BAAtB;;;AACA,MAAMC,UAAU,GAAG,CAAC;AAACC,EAAAA,KAAD;AAAOC,EAAAA,MAAP;AAAcC,EAAAA;AAAd,CAAD,KAA+B;AAAA;;AAEhD,QAAMC,QAAQ,GAACZ,WAAW,EAA1B;AACE,QAAM,CAACa,IAAD,EAAMC,OAAN,IAAef,QAAQ,CAAC,EAAD,CAA7B;;AACA,QAAMgB,YAAY,GAAEC,CAAD,IAAK;AACnBF,IAAAA,OAAO,CAACE,CAAC,CAACC,MAAF,CAASC,KAAV,CAAP;AACJ,GAFD;;AAGA,QAAMC,UAAU,GAAEH,CAAD,IAAK;AACpBA,IAAAA,CAAC,CAACI,cAAF;AACA,UAAMC,QAAQ,GAAC;AACbC,MAAAA,EAAE,EAACC,IAAI,CAACC,GAAL,EADU;AAEbX,MAAAA,IAAI,EAACA;AAFQ,KAAf;AAIAD,IAAAA,QAAQ,CAACL,OAAO,CAACc,QAAD,CAAR,CAAR;AACAV,IAAAA,UAAU;AACVG,IAAAA,OAAO,CAAC,EAAD,CAAP;AAED,GAVD;;AAWA,sBACI,QAAC,KAAD,CAAO,QAAP;AAAA,2BACE,QAAC,KAAD;AAAO,MAAA,MAAM,EAAEL,KAAf;AAAsB,MAAA,MAAM,EAAEC,MAA9B;AAAA,8BACE,QAAC,WAAD;AAAa,QAAA,MAAM,EAAEA,MAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEG,QAAC,SAAD;AAAA,+BACK;AAAA,iCACI;AAAK,YAAA,SAAS,EAAC,YAAf;AAAA,oCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEM;AAAO,cAAA,IAAI,EAAC,MAAZ;AAAmB,cAAA,SAAS,EAAC,cAA7B;AAA4C,cAAA,IAAI,EAAC,MAAjD;AAAwD,cAAA,KAAK,EAAEG,IAA/D;AAAqE,cAAA,QAAQ,EAAEE;AAA/E;AAAA;AAAA;AAAA;AAAA,oBAFN;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADL;AAAA;AAAA;AAAA;AAAA,cAFH,eAUG,QAAC,WAAD;AAAA,gCACI,QAAC,MAAD;AAAQ,UAAA,KAAK,EAAC,SAAd;AAAwB,UAAA,OAAO,EAAEI,UAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,EAC+D,GAD/D,eAEI,QAAC,MAAD;AAAQ,UAAA,KAAK,EAAC,WAAd;AAA0B,UAAA,OAAO,EAAET,MAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAVH;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADJ;AAmBH,CArCD;;GAAMF,U;UAEWR,W;;;KAFXQ,U;AAuCN,eAAeA,UAAf","sourcesContent":["import React, { useState } from 'react'\r\nimport { useDispatch,useSelector } from 'react-redux';\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\r\nimport {addTodo} from '../redux/actions/TodoActions'\r\nconst CreateTask = ({modal,toggle,modalState}) => {\r\n  \r\n  const dispatch=useDispatch();\r\n    const [task,setTask]=useState(\"\");\r\n    const handleChange=(e)=>{\r\n         setTask(e.target.value)\r\n    }\r\n    const createTodo=(e)=>{\r\n      e.preventDefault();\r\n      const new_todo={\r\n        id:Date.now(),\r\n        task:task\r\n      }\r\n      dispatch(addTodo(new_todo));\r\n      modalState()\r\n      setTask(\"\");\r\n      \r\n    }\r\n    return (\r\n        <React.Fragment>\r\n          <Modal isOpen={modal} toggle={toggle}>\r\n            <ModalHeader toggle={toggle}>Create Task</ModalHeader>\r\n             <ModalBody>\r\n                  <form>\r\n                      <div className=\"form-group\">\r\n                          <label>Task</label>\r\n                            <input type=\"text\" className=\"form-control\" name=\"task\" value={task} onChange={handleChange}></input>\r\n                      </div>\r\n                  </form>\r\n             </ModalBody>\r\n             <ModalFooter>\r\n                 <Button color=\"primary\" onClick={createTodo}>Save</Button>{' '}\r\n                 <Button color=\"secondary\" onClick={toggle}>Cancel</Button>\r\n            </ModalFooter>\r\n          </Modal>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default CreateTask\r\n"]},"metadata":{},"sourceType":"module"}