{"ast":null,"code":"var _jsxFileName = \"F:\\\\react2021\\\\todologinapp\\\\src\\\\modals\\\\EditTask.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\nimport { editTodo } from '../redux/actions/TodoActions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst EditTask = ({\n  modal,\n  toggle,\n  modalState,\n  todo\n}) => {\n  _s();\n\n  const dispatch = useDispatch();\n  const [etask, seteTask] = useState(\"\");\n\n  const handleChange = e => {\n    seteTask(e.target.value);\n  };\n\n  useEffect(() => {\n    seteTask(todo.task);\n  }, [todo]);\n\n  const handleUpdate = e => {\n    e.preventDefault();\n    const update_todo = {\n      task: etask\n    };\n    dispatch(editTodo(update_todo));\n    modalState();\n    seteTask(\"\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: modal,\n      toggle: toggle,\n      children: [/*#__PURE__*/_jsxDEV(ModalHeader, {\n        toggle: toggle,\n        children: \"Edit Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(ModalBody, {\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Task\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 27\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"form-control\",\n              name: \"task\",\n              value: etask,\n              onChange: handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 23\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 19\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 14\n      }, this), /*#__PURE__*/_jsxDEV(ModalFooter, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          color: \"primary\",\n          onClick: handleUpdate,\n          children: \"Update\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 18\n        }, this), ' ', /*#__PURE__*/_jsxDEV(Button, {\n          color: \"secondary\",\n          onClick: toggle,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 18\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 14\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n};\n\n_s(EditTask, \"P4wWoUzhBdPY2kvDvJfx32yWXu4=\", false, function () {\n  return [useDispatch];\n});\n\n_c = EditTask;\nexport default EditTask;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditTask\");","map":{"version":3,"sources":["F:/react2021/todologinapp/src/modals/EditTask.js"],"names":["React","useState","useEffect","useDispatch","Button","Modal","ModalHeader","ModalBody","ModalFooter","editTodo","EditTask","modal","toggle","modalState","todo","dispatch","etask","seteTask","handleChange","e","target","value","task","handleUpdate","preventDefault","update_todo"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAAyBC,SAAzB,QAA0C,OAA1C;AACA,SAASC,WAAT,QAA2B,aAA3B;AACA,SAASC,MAAT,EAAiBC,KAAjB,EAAwBC,WAAxB,EAAqCC,SAArC,EAAgDC,WAAhD,QAAmE,YAAnE;AACA,SAASC,QAAT,QAAwB,8BAAxB;;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAACC,EAAAA,KAAD;AAAOC,EAAAA,MAAP;AAAcC,EAAAA,UAAd;AAAyBC,EAAAA;AAAzB,CAAD,KAAoC;AAAA;;AACnD,QAAMC,QAAQ,GAACZ,WAAW,EAA1B;AACE,QAAM,CAACa,KAAD,EAAOC,QAAP,IAAiBhB,QAAQ,CAAC,EAAD,CAA/B;;AAEA,QAAMiB,YAAY,GAAEC,CAAD,IAAK;AACnBF,IAAAA,QAAQ,CAACE,CAAC,CAACC,MAAF,CAASC,KAAV,CAAR;AACJ,GAFD;;AAGAnB,EAAAA,SAAS,CAAC,MAAI;AAACe,IAAAA,QAAQ,CAACH,IAAI,CAACQ,IAAN,CAAR;AAAoB,GAA1B,EAA2B,CAACR,IAAD,CAA3B,CAAT;;AACA,QAAMS,YAAY,GAAEJ,CAAD,IAAK;AACrBA,IAAAA,CAAC,CAACK,cAAF;AACA,UAAMC,WAAW,GAAC;AAChBH,MAAAA,IAAI,EAACN;AADW,KAAlB;AAGAD,IAAAA,QAAQ,CAACN,QAAQ,CAACgB,WAAD,CAAT,CAAR;AACCZ,IAAAA,UAAU;AACVI,IAAAA,QAAQ,CAAC,EAAD,CAAR;AAEH,GATD;;AAUA,sBACI,QAAC,KAAD,CAAO,QAAP;AAAA,2BACE,QAAC,KAAD;AAAO,MAAA,MAAM,EAAEN,KAAf;AAAsB,MAAA,MAAM,EAAEC,MAA9B;AAAA,8BACE,QAAC,WAAD;AAAa,QAAA,MAAM,EAAEA,MAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEG,QAAC,SAAD;AAAA,+BACK;AAAA,iCACI;AAAK,YAAA,SAAS,EAAC,YAAf;AAAA,oCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEM;AAAO,cAAA,IAAI,EAAC,MAAZ;AAAmB,cAAA,SAAS,EAAC,cAA7B;AAA4C,cAAA,IAAI,EAAC,MAAjD;AAAwD,cAAA,KAAK,EAAEI,KAA/D;AAAsE,cAAA,QAAQ,EAAEE;AAAhF;AAAA;AAAA;AAAA;AAAA,oBAFN;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADL;AAAA;AAAA;AAAA;AAAA,cAFH,eAUG,QAAC,WAAD;AAAA,gCACI,QAAC,MAAD;AAAQ,UAAA,KAAK,EAAC,SAAd;AAAwB,UAAA,OAAO,EAAEK,YAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,EACmE,GADnE,eAEI,QAAC,MAAD;AAAQ,UAAA,KAAK,EAAC,WAAd;AAA0B,UAAA,OAAO,EAAEX,MAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAVH;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADJ;AAmBH,CArCD;;GAAMF,Q;UACWP,W;;;KADXO,Q;AAuCN,eAAeA,QAAf","sourcesContent":["import React, { useState,useEffect } from 'react'\r\nimport { useDispatch} from 'react-redux';\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\r\nimport { editTodo} from '../redux/actions/TodoActions';\r\n\r\nconst EditTask = ({modal,toggle,modalState,todo}) => {\r\n  const dispatch=useDispatch();\r\n    const [etask,seteTask]=useState(\"\");\r\n    \r\n    const handleChange=(e)=>{\r\n         seteTask(e.target.value)\r\n    }\r\n    useEffect(()=>{seteTask(todo.task)},[todo])\r\n    const handleUpdate=(e)=>{\r\n       e.preventDefault();\r\n       const update_todo={\r\n         task:etask\r\n       }\r\n       dispatch(editTodo(update_todo))\r\n        modalState();\r\n        seteTask(\"\");\r\n        \r\n    }\r\n    return (\r\n        <React.Fragment>\r\n          <Modal isOpen={modal} toggle={toggle}>\r\n            <ModalHeader toggle={toggle}>Edit Task</ModalHeader>\r\n             <ModalBody>\r\n                  <form>\r\n                      <div className=\"form-group\">\r\n                          <label>Task</label>\r\n                            <input type=\"text\" className=\"form-control\" name=\"task\" value={etask} onChange={handleChange}></input>\r\n                      </div>\r\n                  </form>\r\n             </ModalBody>\r\n             <ModalFooter>\r\n                 <Button color=\"primary\" onClick={handleUpdate}>Update</Button>{' '}\r\n                 <Button color=\"secondary\" onClick={toggle}>Cancel</Button>\r\n            </ModalFooter>\r\n          </Modal>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default EditTask"]},"metadata":{},"sourceType":"module"}