{"ast":null,"code":"var _jsxFileName = \"F:\\\\react2021\\\\todologinapp\\\\src\\\\components\\\\Login\\\\Login.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { useHistory, Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Login = () => {\n  _s();\n\n  const history = useHistory(); //console.log(props);\n\n  const regexPass = /^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#\\$%\\^&\\*])/;\n  const loginSchema = Yup.object().shape({\n    email: Yup.string().email('Invalid Email').required('Email Required'),\n    password: Yup.string().min(8, 'Minimum 8 characters required').matches(regexPass, 'Must contain atleast 1 lowercase letter,Uppercase letter,symbol,digit').required('Password is required')\n  } //matches(/?=.*[a-z]/,'Must contain atleast one Lowercase letter').matches(/?=.*[A-Z]/,'Must contain atleast one Uppercase letter').matches(/?=.*[\\d]/,'Must contain atleast one digit').matches(/?=.*[!@#$%^&*]/,'Must contain atleast one symbol')\n  );\n  const user = localStorage.getItem(\"UserDetails\");\n  const parsedata = JSON.parse(user);\n  return /*#__PURE__*/_jsxDEV(Formik, {\n    initialValues: {\n      email: '',\n      password: ''\n    },\n    onSubmit: (values, {\n      setSubmitting\n    }, errors) => {\n      console.log(values);\n\n      if (values.email === parsedata.email && values.password === parsedata.password) {\n        localStorage.setItem(\"UserLogin\", values);\n        history.push(\"/dashboard\");\n      } else {\n        history.push(\"/login\");\n        alert(\"Check Username and Password\"); //console.log(errors);\n      }\n    },\n    validationSchema: loginSchema,\n    children: ({\n      values,\n      touched,\n      errors,\n      isSubmitting,\n      handleChange,\n      handleBlur,\n      handleSubmit\n    }) => /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"form-group\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        name: \"email\",\n        placeholder: \"email@email.com\",\n        value: values.email,\n        onChange: handleChange,\n        onBlur: handleBlur\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), errors.email && touched.email ? /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"text-danger text-center\",\n        children: errors.email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 50\n      }, this) : null, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        className: \"form-control\",\n        name: \"password\",\n        placeholder: \"password...\",\n        value: values.password,\n        onChange: handleChange,\n        onBlur: handleBlur\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), errors.password && touched.password ? /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"text-danger\",\n        children: errors.password\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 56\n      }, this) : null, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"form-control btn btn-primary mt-2 mb-4\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 34\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Login, \"9cZfZ04734qoCGIctmKX7+sX6eU=\", false, function () {\n  return [useHistory];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["F:/react2021/todologinapp/src/components/Login/Login.js"],"names":["React","Formik","Yup","useHistory","Link","Login","history","regexPass","loginSchema","object","shape","email","string","required","password","min","matches","user","localStorage","getItem","parsedata","JSON","parse","values","setSubmitting","errors","console","log","setItem","push","alert","touched","isSubmitting","handleChange","handleBlur","handleSubmit"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport {Formik} from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { useHistory,Link } from \"react-router-dom\";\r\n\r\nconst Login = () => {\r\n    const history=useHistory();\r\n    //console.log(props);\r\n    const regexPass=/^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#\\$%\\^&\\*])/;\r\n    const loginSchema=Yup.object().shape({\r\n        email:Yup.string().email('Invalid Email').required('Email Required'),\r\n        password:Yup.string().min(8,'Minimum 8 characters required').matches(regexPass,'Must contain atleast 1 lowercase letter,Uppercase letter,symbol,digit').required('Password is required')\r\n     }\r\n     //matches(/?=.*[a-z]/,'Must contain atleast one Lowercase letter').matches(/?=.*[A-Z]/,'Must contain atleast one Uppercase letter').matches(/?=.*[\\d]/,'Must contain atleast one digit').matches(/?=.*[!@#$%^&*]/,'Must contain atleast one symbol')\r\n     );\r\n     const user=localStorage.getItem(\"UserDetails\");\r\n     const parsedata=JSON.parse(user);\r\n     \r\n    return(\r\n    <Formik initialValues={{email:'',password:''}}\r\n        onSubmit={(values,{setSubmitting},errors)=>{\r\n            console.log(values);\r\n           if((values.email===parsedata.email)&&(values.password===parsedata.password))\r\n           {  \r\n                  localStorage.setItem(\"UserLogin\",values)\r\n                  \r\n                  history.push(\"/dashboard\")\r\n\r\n           }\r\n            else\r\n           {\r\n                history.push(\"/login\");\r\n                alert(\"Check Username and Password\"); \r\n                //console.log(errors);\r\n           } \r\n        }}\r\n        validationSchema={loginSchema}\r\n        >\r\n            {({\r\n                values,\r\n                touched,\r\n                errors,\r\n                isSubmitting,\r\n                handleChange,\r\n                handleBlur,\r\n                handleSubmit})=>(<form className=\"form-group\" onSubmit={handleSubmit}>\r\n                <br></br>\r\n                <label>Email</label>\r\n                <input type=\"text\" className=\"form-control\" name=\"email\" placeholder=\"email@email.com\" value={values.email} onChange={handleChange} onBlur={handleBlur}></input>\r\n                {errors.email && touched.email ?(<span className=\"text-danger text-center\">{errors.email}</span>):null}\r\n                <br></br>\r\n                <label>Password</label>\r\n                <input type=\"password\" className=\"form-control\" name=\"password\" placeholder=\"password...\" value={values.password} onChange={handleChange} onBlur={handleBlur}></input>\r\n                {errors.password && touched.password ?(<span className=\"text-danger\">{errors.password}</span>):null}\r\n                <br></br>\r\n                <button type=\"submit\" className=\"form-control btn btn-primary mt-2 mb-4\">Login</button>\r\n            </form>\r\n            )}\r\n        </Formik>  \r\n    ) \r\n}\r\n\r\nexport default Login\r\n"]},"metadata":{},"sourceType":"module"}