{"ast":null,"code":"const initialState = {\n  list: []\n};\n\nconst TodoReducers = (state = initialState, action) => {\n  switch (action.type) {\n    case \"ADD_TODO\":\n      return { ...state,\n        list: [action.payload, ...state.list]\n      };\n\n    case \"UPDATE_TODO\":\n      const updatestate = state.list.map(todo => todo.id === action.payload.id ? action.payload : todo);\n      return { ...state,\n        list: updatestate\n      };\n\n    case \"DELETE_TODO\":\n      const newList = state.list.filter(elem => elem.id !== action.payload);\n      return { ...state,\n        list: newList\n      };\n\n    default:\n      return state;\n  }\n};\n\n_c = TodoReducers;\nexport default TodoReducers;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoReducers\");","map":{"version":3,"sources":["F:/react2021/todologinapp/src/redux/reducers/TodoReducers.js"],"names":["initialState","list","TodoReducers","state","action","type","payload","updatestate","map","todo","id","newList","filter","elem"],"mappings":"AAAA,MAAMA,YAAY,GAAC;AAACC,EAAAA,IAAI,EAAC;AAAN,CAAnB;;AACA,MAAMC,YAAY,GAAC,CAACC,KAAK,GAACH,YAAP,EAAoBI,MAApB,KAA6B;AAC5C,UAAOA,MAAM,CAACC,IAAd;AAEI,SAAK,UAAL;AACI,aAAO,EACH,GAAGF,KADA;AAEHF,QAAAA,IAAI,EAAC,CAACG,MAAM,CAACE,OAAR,EAAgB,GAAGH,KAAK,CAACF,IAAzB;AAFF,OAAP;;AAIJ,SAAK,aAAL;AACI,YAAMM,WAAW,GAACJ,KAAK,CAACF,IAAN,CAAWO,GAAX,CAAeC,IAAI,IAAEA,IAAI,CAACC,EAAL,KAAUN,MAAM,CAACE,OAAP,CAAeI,EAAzB,GAA4BN,MAAM,CAACE,OAAnC,GAA2CG,IAAhE,CAAlB;AACA,aAAO,EACH,GAAGN,KADA;AAEHF,QAAAA,IAAI,EAACM;AAFF,OAAP;;AAIJ,SAAK,aAAL;AACK,YAAMI,OAAO,GAACR,KAAK,CAACF,IAAN,CAAWW,MAAX,CAAmBC,IAAD,IAAQA,IAAI,CAACH,EAAL,KAAUN,MAAM,CAACE,OAA3C,CAAd;AACA,aAAO,EAAC,GAAGH,KAAJ;AAAUF,QAAAA,IAAI,EAACU;AAAf,OAAP;;AACL;AACI,aAAOR,KAAP;AAjBR;AAmBH,CApBD;;KAAMD,Y;AAqBN,eAAeA,YAAf","sourcesContent":["const initialState={list:[]};\r\nconst TodoReducers=(state=initialState,action)=>{\r\n    switch(action.type)\r\n    {\r\n        case \"ADD_TODO\":\r\n            return {\r\n                ...state,\r\n                list:[action.payload,...state.list]\r\n            };\r\n        case \"UPDATE_TODO\":\r\n            const updatestate=state.list.map(todo=>todo.id===action.payload.id?action.payload:todo)\r\n            return {\r\n                ...state,\r\n                list:updatestate\r\n            }\r\n        case \"DELETE_TODO\":\r\n             const newList=state.list.filter((elem)=>elem.id!==action.payload)\r\n             return {...state,list:newList};\r\n        default:\r\n            return state;\r\n    }\r\n}\r\nexport default TodoReducers;"]},"metadata":{},"sourceType":"module"}