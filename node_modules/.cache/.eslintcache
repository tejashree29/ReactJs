[{"F:\\react2021\\todologinapp\\src\\index.js":"1","F:\\react2021\\todologinapp\\src\\App.js":"2","F:\\react2021\\todologinapp\\src\\reportWebVitals.js":"3","F:\\react2021\\todologinapp\\src\\pages\\LoginPage.js":"4","F:\\react2021\\todologinapp\\src\\pages\\RegisterPage.js":"5","F:\\react2021\\todologinapp\\src\\components\\Login\\Login.js":"6","F:\\react2021\\todologinapp\\src\\components\\Register\\Register.js":"7","F:\\react2021\\todologinapp\\src\\components\\Dashboard.js":"8","F:\\react2021\\todologinapp\\src\\modals\\CreateTask.js":"9","F:\\react2021\\todologinapp\\src\\redux\\actions\\TodoActions.js":"10","F:\\react2021\\todologinapp\\src\\todo\\TodoList.js":"11","F:\\react2021\\todologinapp\\src\\modals\\EditTask.js":"12","F:\\react2021\\todologinapp\\src\\redux\\reducers\\store.js":"13","F:\\react2021\\todologinapp\\src\\redux\\reducers\\index.js":"14","F:\\react2021\\todologinapp\\src\\redux\\reducers\\TodoReducers.js":"15","F:\\react2021\\todologinapp\\src\\pages\\EditTask.js":"16","F:\\react2021\\todologinapp\\src\\components\\ProtectedRoute.js":"17"},{"size":831,"mtime":1622053320812,"results":"18","hashOfConfig":"19"},{"size":769,"mtime":1622064734298,"results":"20","hashOfConfig":"19"},{"size":362,"mtime":499162500000,"results":"21","hashOfConfig":"19"},{"size":835,"mtime":1622063860910,"results":"22","hashOfConfig":"19"},{"size":654,"mtime":1621983535759,"results":"23","hashOfConfig":"19"},{"size":2869,"mtime":1622063696887,"results":"24","hashOfConfig":"19"},{"size":9822,"mtime":1622038915521,"results":"25","hashOfConfig":"19"},{"size":2002,"mtime":1622052944966,"results":"26","hashOfConfig":"19"},{"size":1483,"mtime":1621984607061,"results":"27","hashOfConfig":"19"},{"size":311,"mtime":1621984289484,"results":"28","hashOfConfig":"19"},{"size":1261,"mtime":1622045830774,"results":"29","hashOfConfig":"19"},{"size":1539,"mtime":1621985721845,"results":"30","hashOfConfig":"19"},{"size":521,"mtime":1622053144061,"results":"31","hashOfConfig":"19"},{"size":169,"mtime":1621984479376,"results":"32","hashOfConfig":"19"},{"size":802,"mtime":1622057071679,"results":"33","hashOfConfig":"19"},{"size":1883,"mtime":1622058597496,"results":"34","hashOfConfig":"19"},{"size":338,"mtime":1622064936771,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"18zxy49",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"38"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"38"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"38"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"38"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"F:\\react2021\\todologinapp\\src\\index.js",[],["75","76"],"F:\\react2021\\todologinapp\\src\\App.js",[],"F:\\react2021\\todologinapp\\src\\reportWebVitals.js",[],"F:\\react2021\\todologinapp\\src\\pages\\LoginPage.js",[],"F:\\react2021\\todologinapp\\src\\pages\\RegisterPage.js",[],"F:\\react2021\\todologinapp\\src\\components\\Login\\Login.js",["77","78","79","80"],"F:\\react2021\\todologinapp\\src\\components\\Register\\Register.js",["81","82","83","84"],"import React,{useState} from 'react';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {Link} from 'react-router-dom';\r\nimport axios from 'axios'\r\n\r\nconst Register = () => {\r\n    const history=useHistory();\r\n    /*  const redirectToLogin = () => {\r\n         history.push(\"/login\");\r\n       }; */\r\n     const getInitialchk={\r\n         containsNumber:false,\r\n         containsUppercase:false,\r\n         containsLowercase:false,\r\n         containsSymbol:false,\r\n         containsMinChar:false\r\n \r\n     }\r\n    const[pass,setPass]=useState(getInitialchk)\r\n    \r\n     const getInitialData={\r\n         email:'',\r\n         firstname:'',\r\n         lastname:'',\r\n         countrycode:'',\r\n         phone:'',\r\n         password:'',\r\n         confirmPassword:''\r\n     }\r\n     const[userData,setuserData]=useState(getInitialData);\r\n     const[redirect,setRedirect]=useState(false);\r\n     const[errors,setErrors]=useState({});\r\n     const{email,firstname,lastname,countrycode,phone,password,confirmPassword}=userData;\r\n      const validateForm=()=>{\r\n         let errors={};\r\n         if(!/^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/.test(userData.email))\r\n         {\r\n             errors.email='Invalid Email';\r\n         }else if(userData.email==='')\r\n         {\r\n             errors.email='Email is required'; \r\n         }\r\n         if(!/^[A-Za-z]+$/.test(userData.firstname))\r\n         {\r\n             errors.firstname='First name contains only character';\r\n         }else if(userData.firstname==='')\r\n         {\r\n             errors.firstname='First Name is Required';\r\n         }\r\n         if(!/^[A-Za-z]+$/.test(userData.lastname))\r\n         {\r\n             errors.lastname='Last name contains only character';\r\n         }else if(userData.lastname==='')\r\n         {\r\n             errors.lastname='Last Name is Required';\r\n         }\r\n         if(!/^[0-9]+$/.test(userData.countrycode))\r\n         {\r\n             errors.countrycode='Please check country code number';\r\n         }else if(userData.countrycode==='')\r\n         {\r\n             errors.countrycode='Please Provide country code';\r\n         }\r\n         if(!/^[0-9]+$/.test(userData.phone))\r\n         {\r\n             errors.phone='Please check phone number';\r\n         }else if(userData.phone.length!==10)\r\n         {\r\n             errors.phone='Please provide 10 digits number';\r\n         }else if(userData.phone==='')\r\n         {\r\n             errors.phone='Phone number cannot be blank';\r\n         }\r\n         if(!/^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#\\$%\\^&\\*])(?=.{8,})/.test(userData.password))\r\n         {\r\n             errors.password='Not a strong password';\r\n         }else if(userData.password==='')\r\n         {\r\n             errors.password='Password cannot be Blank';\r\n         }\r\n         if(userData.confirmPassword!==userData.password)\r\n         {\r\n             errors.confirmPassword='Password does not match';\r\n         }\r\n \r\n         return errors\r\n     } \r\n   \r\n     \r\n     const handleonChange=(e)=>{\r\n         setuserData({\r\n             ...userData,\r\n             [e.target.name]:e.target.value\r\n         });\r\n        /*  setErrors({\r\n             ...errors,\r\n             [e.target.name]:''\r\n         }) */\r\n         \r\n           if(e.target.name===\"password\")\r\n         {  \r\n             \r\n             let targetValue=e.target.value;\r\n             //let num=(/\\d/).match(targetValue);\r\n             console.log(targetValue);\r\n             setPass({\r\n                 containsMinChar:targetValue.length>8 ? true:false,\r\n                 containsNumber:targetValue.match(/\\d/)!==null ? true:false,\r\n                 containsUppercase:targetValue.match(/[A-Z]/)!==null ? true:false,\r\n                 containsLowercase:targetValue.match(/[a-z]/)!==null ? true:false,\r\n                 containsSymbol:targetValue.match(/[!@#%&*#]/)!==null ?true:false\r\n             })\r\n             \r\n         } \r\n     }\r\n     \r\n     const handleonSubmit=(e)=>{\r\n         e.preventDefault();\r\n         //console.log(userData);\r\n        let errors= validateForm();\r\n        setErrors(errors);\r\n        if(Object.keys(errors).length===0)\r\n        {   \r\n            const data={\r\n            email:userData.email,\r\n            password:userData.password,\r\n            firstname:userData.firstname,\r\n            lastname:userData.lastname                     \r\n                  }\r\n            localStorage.setItem(\"UserDetails\",JSON.stringify(userData));\r\n            axios.post('https://reqres.in/api/register',data)\r\n            .then((response)=>\r\n            {\r\n                setRedirect(true);\r\n                localStorage.setItem(\"token\",JSON.stringify(response.data.token));\r\n                //console.log(response);\r\n                //console.log(response.data);\r\n                //console.log(response.data.token);\r\n                if(response.status===200)\r\n                {\r\n                    history.push(\"/login\");\r\n                 }\r\n                 else\r\n                 {\r\n                     history.push(\"/register\");\r\n                 }\r\n                \r\n            }).catch((err)=>console.log(\"error\",err));\r\n            //alert(\"Hi sumitted with correct data\")\r\n            //console.log(\"no errors\");\r\n         //setuserData(getInitialData);\r\n         //setPass(getInitialchk);\r\n      }\r\n        else{\r\n            console.log(errors);\r\n            setErrors(errors);\r\n        } \r\n \r\n     }\r\n     let {containsMinChar,containsNumber,containsUppercase,containsLowercase,containsSymbol}=pass;\r\n     \r\n     return (\r\n         <>\r\n         <form className=\"form-group\" onSubmit={handleonSubmit}>\r\n         <label>Email</label>\r\n         <input type=\"text\" className=\"form-control mb-2\" name=\"email\" value={email} onChange={handleonChange} placeholder=\"Enter Email\"/>\r\n         {errors.email && <span className=\"text-danger\">{errors.email}</span>}\r\n         <div className=\"row\">\r\n             <div className=\"col-6\">\r\n                <label>First Name</label>\r\n                <input type=\"text\" className=\"form-control mb-2\" name=\"firstname\" value={firstname} onChange={handleonChange} placeholder=\"Enter First Name\"/>\r\n                {errors.firstname && <span className=\"text-danger\">{errors.firstname}</span>}\r\n             </div>\r\n             <div className=\"col-6\">\r\n                <label>Last Name</label>\r\n                <input type=\"text\" className=\"form-control mb-2\" name=\"lastname\" value={lastname} onChange={handleonChange} placeholder=\"Enter Last Name\"/>\r\n                {errors.lastname && <span className=\"text-danger\">{errors.lastname}</span>}\r\n             </div>\r\n         </div>\r\n         <div className=\"row\">\r\n             <div className=\"col-4\">\r\n             <label>Country Code</label>\r\n             <input type=\"text\" className=\"form-control mb-2\" name=\"countrycode\" value={countrycode} onChange={handleonChange} placeholder=\"+22\"/>\r\n             {errors.countrycode && <span className=\"text-danger\">{errors.countrycode}</span>}\r\n             </div>\r\n             <div className=\"col-lg-8\">\r\n             <label>Phone No.</label>\r\n             <input type=\"text\" className=\"form-control mb-2\" name=\"phone\" value={phone} onChange={handleonChange} placeholder=\"Enter Phone number\"/>\r\n             {errors.phone && <span className=\"text-danger\">{errors.phone}</span>}\r\n             </div>\r\n         </div>\r\n         <label>Password</label>\r\n         <input type=\"password\" className=\"form-control mb-2\" name=\"password\" value={password} onChange={handleonChange} placeholder=\"Enter Password\"/>\r\n         {errors.password && <span className=\"text-danger\">{errors.password}</span>}\r\n          <br></br>\r\n          <label className=\"text-muted\">Hide Password policy</label>\r\n          <div className=\"form-check\">\r\n            <input className=\"form-check-input\" type=\"checkbox\" id=\"gridCheck\" checked={containsNumber?true:false}  />\r\n           <label className=\"form-check-label\"  htmlFor=\"gridCheck\">\r\n            Have one number\r\n           </label>\r\n           <br></br>\r\n           <input className=\"form-check-input\" type=\"checkbox\" id=\"gridCheck1\" checked={containsUppercase?true:false} />\r\n           <label className=\"form-check-label\"  htmlFor=\"gridCheck1\">\r\n           Have one Uppercase Character \r\n           </label>\r\n           <br></br>\r\n           <input className=\"form-check-input\" type=\"checkbox\" id=\"gridCheck2\"  checked={containsLowercase?true:false}/>\r\n           <label className=\"form-check-label\"  htmlFor=\"gridCheck2\">\r\n           Have one Lowercase Character\r\n           </label>\r\n           <br></br>\r\n           <input className=\"form-check-input\" type=\"checkbox\" id=\"gridCheck3\" checked={containsSymbol?true:false} />\r\n           <label className=\"form-check-label\"  htmlFor=\"gridCheck3\">\r\n           Have one special character\r\n           </label>\r\n           <br></br>\r\n           <input className=\"form-check-input\" type=\"checkbox\" id=\"gridCheck4\" checked={containsMinChar?true:false} />\r\n           <label className=\"form-check-label\" htmlFor=\"gridCheck4\">\r\n           Have minimum 8 character \r\n           </label>\r\n       </div>\r\n         <br></br>\r\n        <label>Confirm Password</label>\r\n        <input type=\"password\" className=\"form-control mb-2\" name=\"confirmPassword\" value={confirmPassword} onChange={handleonChange} placeholder=\"Enter Password again\"/>\r\n        {errors.confirmPassword && <span className=\"text-danger\">{errors.confirmPassword}</span>}\r\n        <br></br>\r\n        <button type=\"submit\" className=\"form-control btn btn-primary mb-4\">Save</button>\r\n        </form>\r\n        <div className=\"d-flex justify-content-center\">\r\n               Already have an account?\r\n               <Link to=\"/login\">\r\n                 Sign In\r\n               </Link>\r\n         </div>\r\n        </>\r\n     )\r\n}\r\n\r\nexport default Register\r\n","F:\\react2021\\todologinapp\\src\\components\\Dashboard.js",["85"],"import React,{useState} from 'react'\r\nimport { useSelector } from 'react-redux';\r\nimport CreateTask from '../modals/CreateTask';\r\nimport TodoList from '../todo/TodoList';\r\nimport {Table} from 'reactstrap'\r\nimport { useHistory } from 'react-router';\r\nimport {Navbar, NavDropdown,Nav} from 'react-bootstrap'\r\nimport navbar from '../Navbar/navbar.css';\r\nconst Dashboard = () => {\r\n    const history=useHistory()\r\n    const data=localStorage.getItem(\"UserDetails\")\r\n    const parsedata=JSON.parse(data);\r\n    const [modal,setModal]=useState(false);\r\n   \r\n    const todos = useSelector(state =>state.TodoReducers.list)\r\n    const toggle=()=>{\r\n        setModal(!modal);\r\n    }\r\n    const modalState=()=>{\r\n        setModal(false)\r\n    }\r\nconst handleLogout=()=>{\r\n    localStorage.removeItem(\"UserLogin\")\r\n    history.push(\"/login\")\r\n}\r\n    return (\r\n        <React.Fragment>\r\n        <Navbar className=\"nav_container\" bg=\"primary\" variant=\"dark\">\r\n            <Nav className=\"nav_bar_wrapper mr-auto\">\r\n                <span className=\"logo\">Logo</span>\r\n                <button className=\"nav-btn\" id=\"btn\" onClick={()=>setModal(true)}> Add Todo </button> \r\n            </Nav>\r\n            <Nav className=\"navdpd\">\r\n                <NavDropdown title={parsedata.firstname}>\r\n                <NavDropdown.Item onClick={handleLogout}>Logout</NavDropdown.Item>\r\n                </NavDropdown>\r\n            </Nav>\r\n        </Navbar>\r\n            <br></br>\r\n                <Table>\r\n                    <thead>\r\n                    <tr>\r\n                        <th>Id</th>\r\n                        <th>Task</th>\r\n                        <th></th>\r\n                    </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                    {todos.map((todo)=><TodoList todo={todo} key={todo.id}/>)}\r\n                    </tbody>\r\n                </Table>\r\n       <CreateTask modal={modal} toggle={toggle} modalState={modalState}/>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default Dashboard","F:\\react2021\\todologinapp\\src\\modals\\CreateTask.js",["86"],"import React, { useState } from 'react'\r\nimport { useDispatch,useSelector } from 'react-redux';\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\r\nimport {addTodo} from '../redux/actions/TodoActions'\r\nconst CreateTask = ({modal,toggle,modalState}) => {\r\n  \r\n  const dispatch=useDispatch();\r\n    const [task,setTask]=useState(\"\");\r\n    const handleChange=(e)=>{\r\n         setTask(e.target.value)\r\n    }\r\n    const createTodo=(e)=>{\r\n      e.preventDefault();\r\n      const new_todo={\r\n        id:Date.now(),\r\n        task:task\r\n      }\r\n      dispatch(addTodo(new_todo));\r\n      modalState()\r\n      setTask(\"\");\r\n      \r\n    }\r\n    return (\r\n        <React.Fragment>\r\n          <Modal isOpen={modal} toggle={toggle}>\r\n            <ModalHeader toggle={toggle}>Create Task</ModalHeader>\r\n             <ModalBody>\r\n                  <form>\r\n                      <div className=\"form-group\">\r\n                          <label>Task</label>\r\n                            <input type=\"text\" className=\"form-control\" name=\"task\" value={task} onChange={handleChange}></input>\r\n                      </div>\r\n                  </form>\r\n             </ModalBody>\r\n             <ModalFooter>\r\n                 <Button color=\"primary\" onClick={createTodo}>Save</Button>{' '}\r\n                 <Button color=\"secondary\" onClick={toggle}>Cancel</Button>\r\n            </ModalFooter>\r\n          </Modal>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default CreateTask\r\n","F:\\react2021\\todologinapp\\src\\redux\\actions\\TodoActions.js",[],"F:\\react2021\\todologinapp\\src\\todo\\TodoList.js",["87","88"],"import React, { useState } from 'react'\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\n//import EditTask from '../modals/EditTask';\r\nimport EditTask from '../pages/EditTask'\r\nimport { useDispatch} from 'react-redux';\r\nimport { deleteTodo } from '../redux/actions/TodoActions';\r\nimport { useHistory } from 'react-router';\r\nconst TodoList = ({todo}) => {\r\n    //const todo =useSelector(state=>state.TodoReducers.list)\r\n    const history =useHistory()\r\n     const dispatch = useDispatch()\r\n    /* const [modal,setModal]=useState(false);\r\n    const toggle=()=>{\r\n        setModal(!modal)\r\n    }\r\n    const modalState=()=>{\r\n        setModal(false)\r\n    } */\r\n    const handleEdit=()=>{\r\n           history.push(`/edit/${todo.id}`);\r\n    }\r\n   \r\n    return (\r\n        <React.Fragment>\r\n              <tr key={todo.id}>\r\n              <td>{todo.id}</td>\r\n              <td>{todo.task}</td>\r\n              <td>\r\n               <button className=\"editbtn\" onClick={handleEdit}><EditIcon/></button>\r\n               <button className=\"deletebtn\" onClick={()=>dispatch(deleteTodo(todo.id))}><DeleteIcon/></button>\r\n              </td>\r\n         </tr>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default TodoList\r\n","F:\\react2021\\todologinapp\\src\\modals\\EditTask.js",[],"F:\\react2021\\todologinapp\\src\\redux\\reducers\\store.js",[],"F:\\react2021\\todologinapp\\src\\redux\\reducers\\index.js",[],"F:\\react2021\\todologinapp\\src\\redux\\reducers\\TodoReducers.js",[],"F:\\react2021\\todologinapp\\src\\pages\\EditTask.js",[],"F:\\react2021\\todologinapp\\src\\components\\ProtectedRoute.js",[],{"ruleId":"89","replacedBy":"90"},{"ruleId":"91","replacedBy":"92"},{"ruleId":"93","severity":1,"message":"94","line":4,"column":21,"nodeType":"95","messageId":"96","endLine":4,"endColumn":25},{"ruleId":"97","severity":1,"message":"98","line":9,"column":65,"nodeType":"99","messageId":"100","endLine":9,"endColumn":66,"suggestions":"101"},{"ruleId":"97","severity":1,"message":"102","line":9,"column":68,"nodeType":"99","messageId":"100","endLine":9,"endColumn":69,"suggestions":"103"},{"ruleId":"97","severity":1,"message":"104","line":9,"column":71,"nodeType":"99","messageId":"100","endLine":9,"endColumn":72,"suggestions":"105"},{"ruleId":"93","severity":1,"message":"106","line":31,"column":12,"nodeType":"95","messageId":"96","endLine":31,"endColumn":20},{"ruleId":"97","severity":1,"message":"98","line":74,"column":58,"nodeType":"99","messageId":"100","endLine":74,"endColumn":59,"suggestions":"107"},{"ruleId":"97","severity":1,"message":"102","line":74,"column":61,"nodeType":"99","messageId":"100","endLine":74,"endColumn":62,"suggestions":"108"},{"ruleId":"97","severity":1,"message":"104","line":74,"column":64,"nodeType":"99","messageId":"100","endLine":74,"endColumn":65,"suggestions":"109"},{"ruleId":"93","severity":1,"message":"110","line":8,"column":8,"nodeType":"95","messageId":"96","endLine":8,"endColumn":14},{"ruleId":"93","severity":1,"message":"111","line":2,"column":22,"nodeType":"95","messageId":"96","endLine":2,"endColumn":33},{"ruleId":"93","severity":1,"message":"112","line":1,"column":17,"nodeType":"95","messageId":"96","endLine":1,"endColumn":25},{"ruleId":"93","severity":1,"message":"113","line":5,"column":8,"nodeType":"95","messageId":"96","endLine":5,"endColumn":16},"no-native-reassign",["114"],"no-negated-in-lhs",["115"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","no-useless-escape","Unnecessary escape character: \\$.","Literal","unnecessaryEscape",["116","117"],"Unnecessary escape character: \\^.",["118","119"],"Unnecessary escape character: \\*.",["120","121"],"'redirect' is assigned a value but never used.",["122","123"],["124","125"],["126","127"],"'navbar' is defined but never used.","'useSelector' is defined but never used.","'useState' is defined but never used.","'EditTask' is defined but never used.","no-global-assign","no-unsafe-negation",{"messageId":"128","fix":"129","desc":"130"},{"messageId":"131","fix":"132","desc":"133"},{"messageId":"128","fix":"134","desc":"130"},{"messageId":"131","fix":"135","desc":"133"},{"messageId":"128","fix":"136","desc":"130"},{"messageId":"131","fix":"137","desc":"133"},{"messageId":"128","fix":"138","desc":"130"},{"messageId":"131","fix":"139","desc":"133"},{"messageId":"128","fix":"140","desc":"130"},{"messageId":"131","fix":"141","desc":"133"},{"messageId":"128","fix":"142","desc":"130"},{"messageId":"131","fix":"143","desc":"133"},"removeEscape",{"range":"144","text":"145"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"146","text":"147"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"148","text":"145"},{"range":"149","text":"147"},{"range":"150","text":"145"},{"range":"151","text":"147"},{"range":"152","text":"145"},{"range":"153","text":"147"},{"range":"154","text":"145"},{"range":"155","text":"147"},{"range":"156","text":"145"},{"range":"157","text":"147"},[291,292],"",[291,291],"\\",[294,295],[294,294],[297,298],[297,297],[2543,2544],[2543,2543],[2546,2547],[2546,2546],[2549,2550],[2549,2549]]